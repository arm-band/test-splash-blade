/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ (() => {

eval("/**\n * validatePhotoURL\n *\n * @param {string} url\n * @returns {string} error message (return empty string when validate is true.)\n */\nconst validatePhotoURL = (url) => {\n    const validURLPrefix = 'https://unsplash.com/photos/';\n    const regexp = new RegExp(/^[\\w\\d\\-\\_]+$/);\n    if(url.length === undefined || url.length === 0) {\n        return 'URL が空です。';\n    }\n    if(url.indexOf(validURLPrefix) === -1 || url.indexOf(validURLPrefix) > 0) {\n        return 'URL が不正です。正しい URL (`https://unsplash.com/photos/XXXXXXXXXXX`) を入力してください。';\n    }\n    const pictureID = url.replace(validURLPrefix, '');\n    if(pictureID.slice(-1) === '/' || !regexp.test(pictureID)) {\n        return '画像IDが不正です。また、末尾はスラッシュで終わらないようにしてください。';\n    }\n    return '';\n};\n/**\n * validateWH\n *\n * @param {string} width\n * @param {string} height\n * @returns {string} error message (return empty string when validate is true.)\n */\n const validateWH = (width, height) => {\n    const regexp = new RegExp(/^[\\d]+$/);\n    if(\n        (width.length === undefined || width.length === 0)\n        && (height.length === undefined || height.length === 0)\n    ) {\n        // 両方とも空文字列ならば問題なし\n        return '';\n    }\n    if (\n        width.length > 0 && height.length === 0\n        || width.length === 0 && height.length > 0\n    ) {\n        // どちらか片方しか入力していない場合はエラー\n        return '幅・高さは両方とも入力してください。';\n    }\n    if(!regexp.test(width) || !regexp.test(height)) {\n        // 数字であることをチェック\n        return '幅・高さ のどちらか、または両方が不正です。数字で入力してください。';\n    }\n    return '';\n};\n\n/**\n * htmlspecialchars\n *\n * @param {string} txt\n * @returns {string} html special characters escaped text\n */\nconst htmlspecialchars = (txt) => {\n    if(typeof txt !== 'string'){\n      return txt;\n    }\n    return txt.replace(\n      /[&'`\"<>]/g,\n      function(match) {\n        return {\n          '&': '&amp;',\n          \"'\": '&#x27;',\n          '`': '&#x60;',\n          '\"': '&quot;',\n          '<': '&lt;',\n          '>': '&gt;',\n        }[match]\n      }\n    );\n  }\n\n/**\n * generateAPIURL\n *\n * @param {string} url\n * @param {string} width\n * @param {string} height\n * @returns {string} error message (return empty string when validate is true.)\n */\n const generateAPIURL = (url, width, height) => {\n    const validURLPrefix = 'https://unsplash.com/photos/';\n    const apiURLPrefix = 'https://source.unsplash.com/';\n    const pictureID = url.replace(validURLPrefix, '');\n    let apiURL = `${apiURLPrefix}${pictureID}`;\n    if(\n        (width.length === undefined || width.length === 0)\n        && (height.length === undefined || height.length === 0)\n    ) {\n        return apiURL;\n    }\n\n    return `${apiURL}/${width}x${height}`;\n};\n\n/**\n * clipboardCopy\n *\n * @param {string} url\n * @returns {boolean}\n */\n const clipboardCopy = (url) => {\n    navigator.clipboard.writeText(url);\n    return true;\n};\n\nwindow.addEventListener('load', () => {\n    // https://unsplash.com/photos/\n    const $generateButton = document.querySelector('#generate');\n\n    $generateButton.addEventListener('click', () => {\n        // ボタンがクリックされたら\n        const $photoURL = document.querySelector('#photo-url');\n        const $width = document.querySelector('#width');\n        const $height = document.querySelector('#height');\n        // 値取得\n        const photoURL = $photoURL.value;\n        const validatedResultPhotoURL = validatePhotoURL(photoURL);\n        if(validatedResultPhotoURL.length > 0) {\n            // バリデーション & アラート\n            alert(validatedResultPhotoURL);\n            return false;\n        }\n        const width = $width.value;\n        const height = $height.value;\n        const validateResultWH = validateWH(width, height);\n        if(validateResultWH.length > 0) {\n            // バリデーション & アラート\n            alert(validateResultWH);\n            return false;\n        }\n        const apiURL = htmlspecialchars(generateAPIURL(photoURL, width, height));\n        const $apiURL = document.querySelector('#api-url');\n        $apiURL.value = apiURL;\n    });\n    $generateButton.addEventListener('click', () => {\n        const $apiURL = document.querySelector('#api-url');\n        const apiURL = $apiURL.value;\n        return clipboardCopy(apiURL);\n    });\n});\n\n\n//# sourceURL=webpack://mori/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"]();
/******/ 	
/******/ })()
;